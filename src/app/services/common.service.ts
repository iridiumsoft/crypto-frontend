export class CommonService {    static loadFile(srcs, callback = null) {        let filesList = [];        if (!Array.isArray(srcs)) {            filesList = [srcs]        } else {            filesList = srcs;        }        let loaded = 0;        filesList.forEach((src, key) => {            const typeParts = src.split('.');            const NameParts = src.split('/');            let type = typeParts[typeParts.length - 1];            const id = 'sam-' + (NameParts[NameParts.length - 1].replace('.' + type, '')) + type;            const el = document.getElementById(id);            if (!(typeof(el) != 'undefined' && el != null)) {                const file = document.createElement(type === 'css' ? 'link' : 'script');                file[type === 'css' ? 'href' : 'src'] = src;                if (type === 'css') {                    file['rel'] = 'stylesheet';                    file['type'] = 'text/css';                } else {                    file['type'] = 'text/javascript';                }                file.id = id;                file.setAttribute('defer', '');                file['onreadystatechange'] = file.onload = function () {                    loaded++                };                document.getElementsByTagName('head')[0].appendChild(file);            } else {                loaded++;            }        });        if (callback) {            setTimeout(() => {                if (loaded == filesList.length) {                    callback()                }            }, 500)        }    }}